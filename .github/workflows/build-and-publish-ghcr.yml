name: Build and Publish Docker Images

on:
  push:
    branches: [main]

permissions:
  contents: read
  packages: write

jobs:
  tag:
    name: 🏷️ Tag Release
    runs-on: ubuntu-latest
    permissions:
      contents: write
    strategy:
      matrix:
        service:
          - api
          - worker
    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Install dependencies for ${{ matrix.service }}
        run: npm install
        working-directory: apps/${{ matrix.service }}

      - name: 🏷️ Semantic Release ${{ matrix.service }}
        uses: cycjimmy/semantic-release-action@v4
        with:
          working_directory: apps/${{ matrix.service }}
          tag_format: ${{ matrix.service }}-v${version}
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}

  build-and-publish:
    name: 🐳 Build and Publish Docker Images
    runs-on: ubuntu-latest
    needs: tag
    strategy:
      matrix:
        service:
          - api
          - worker
    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Fetch all tags
        run: git fetch --tags

      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v3

      - name: Login to GitHub Container Registry
        uses: docker/login-action@v3
        with:
          registry: ghcr.io
          username: ${{ github.repository_owner }}
          password: ${{ secrets.GITHUB_TOKEN }}

      - name: Get latest tag for ${{ matrix.service }}
        run: |
          TAG=$(git tag --sort=-v:refname | grep "^${{ matrix.service }}-v" | head -n 1)
          if [ -z "$TAG" ]; then
          TAG="latest"
          else
          TAG="${TAG#${{ matrix.service }}-v}"
          fi
          echo "tag=$TAG" >> $GITHUB_ENV

      - name: Build and Push ${{ matrix.service }} Image
        uses: docker/build-push-action@v6
        with:
          context: ./apps/${{ matrix.service }}
          file: ./apps/${{ matrix.service }}/Dockerfile
          push: true
          tags: |
            ghcr.io/${{ github.repository_owner }}/${{ matrix.service }}:${{ env.tag }}
            ghcr.io/${{ github.repository_owner }}/${{ matrix.service }}:latest
